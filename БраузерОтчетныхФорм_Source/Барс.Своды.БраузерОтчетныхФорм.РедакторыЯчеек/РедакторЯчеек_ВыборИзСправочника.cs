namespace Барс.Своды.БраузерОтчетныхФорм.РедакторыЯчеек
{
    using Syncfusion.Windows.Forms.Grid;
    using System;
    using System.Drawing;
    using System.Runtime.Serialization;
    using Барс;
    using Барс.Интерфейс;
    using Барс.Своды;
    using Барс.Своды.ТипыЯчеек;

    [Serializable]
    internal class РедакторЯчеек_ВыборИзСправочника : GridGenericControlCellModel
    {
        private ПараметрыСозданияРедактора_ВыборИзСправочника параметрыСоздания;

        public РедакторЯчеек_ВыборИзСправочника(ПараметрыСозданияРедактора_ВыборИзСправочника ПараметрыСозданияРедактора) : base((ПараметрыСозданияРедактора == null) ? null : ПараметрыСозданияРедактора.Представление)
        {
            this.параметрыСоздания = null;
            base.AllowFloating = false;
            this.параметрыСоздания = ПараметрыСозданияРедактора;
        }

        protected РедакторЯчеек_ВыборИзСправочника(SerializationInfo info, StreamingContext context) : base(info, context)
        {
            this.параметрыСоздания = null;
        }

        public override GridCellRendererBase CreateRenderer(GridControlBase control)
        {
            return new РедакторЯчеек_ВыборИзСправочника_Renderer(control, this, this.параметрыСоздания);
        }

        protected override Size OnQueryPrefferedClientSize(Graphics g, int rowIndex, int colIndex, GridStyleInfo style, GridQueryBounds queryBounds)
        {
            return new Size(base.OnQueryPrefferedClientSize(g, rowIndex, colIndex, style, queryBounds).Width, 40);
        }

        public static void ПроинициализироватьВыборИзСправочника(ВыборИзСправочника выборИзСправочника, GridStyleInfo style, ПараметрыСозданияРедактора_ВыборИзСправочника параметрыСоздания)
        {
            ОписаниеСсылкиНаСправочник справочник = null;
            ТипЯчейки ячейки;
            bool flag = style.CellType == "МножественныйВыборИзСправочника";
            if (flag)
            {
                справочник = new ОписаниеМножественнойСсылкиНаСправочник(style.Description);
            }
            else
            {
                справочник = new ОписаниеСсылкиНаСправочник(style.Description);
            }
            if (параметрыСоздания != null)
            {
                if (!параметрыСоздания.РедактированиеРазрешено)
                {
                    выборИзСправочника.ТипИзменения = ВыборИзСправочника.ТипРедактирования.Запрещено;
                }
                else if (справочник.РучнойВводТекста)
                {
                    выборИзСправочника.ТипИзменения = ВыборИзСправочника.ТипРедактирования.ВыборИВводТекста;
                }
                else
                {
                    выборИзСправочника.ТипИзменения = ВыборИзСправочника.ТипРедактирования.ТолькоВыбор;
                }
            }
            if (!string.IsNullOrEmpty(справочник.КодСправочника))
            {
                string str = справочник.КодСправочника.Trim().ToLower();
                if (str == null)
                {
                    goto Label_0131;
                }
                if (!(str == "учреждение"))
                {
                    if (str == "типучреждения")
                    {
                        СправочникТиповУчреждений учреждений = new СправочникТиповУчреждений();
                        выборИзСправочника.ТипЭлементаДляВыбора = null;
                        выборИзСправочника.ИсточникДанных = учреждений;
                        goto Label_0262;
                    }
                    if (str == "видучреждения")
                    {
                        СправочникВидовУчреждений учреждений2 = new СправочникВидовУчреждений();
                        выборИзСправочника.ТипЭлементаДляВыбора = null;
                        выборИзСправочника.ИсточникДанных = учреждений2;
                        goto Label_0262;
                    }
                    goto Label_0131;
                }
                выборИзСправочника.ТипЭлементаДляВыбора = typeof(Учреждение);
                выборИзСправочника.ИсточникДанных = null;
            }
            goto Label_0262;
        Label_0131:
            if (flag)
            {
                ВыборЗаписейСправочника справочника = new ВыборЗаписейСправочника(РежимВыбораЭлементовСпискаВыбора.Множественный);
                справочника.ОписаниеСсылки = (ОписаниеМножественнойСсылкиНаСправочник) справочник;
                выборИзСправочника.ИсточникДанных = справочника;
                if ((параметрыСоздания != null) && (параметрыСоздания.Таблица != null))
                {
                    ячейки = параметрыСоздания.Таблица.ВыбраннаяЯчейка;
                    if ((ячейки != null) && (ячейки.Значение is СписокВыбранныхЗаписейСправочника))
                    {
                        справочника.ВыбранныеЗаписи = ячейки.Значение as СписокВыбранныхЗаписейСправочника;
                    }
                    else
                    {
                        справочника.ВыбранныеЗаписи = null;
                    }
                }
            }
            else
            {
                ВыборИзУниверсальногоСправочника справочника2 = new ВыборИзУниверсальногоСправочника();
                выборИзСправочника.ТипЭлементаДляВыбора = null;
                справочника2.ОписаниеСсылки = справочник;
                выборИзСправочника.ИсточникДанных = справочника2;
                if ((параметрыСоздания != null) && (параметрыСоздания.Таблица != null))
                {
                    ячейки = параметрыСоздания.Таблица.ВыбраннаяЯчейка;
                    if ((ячейки != null) && (ячейки.Значение is ЗаписьСправочника))
                    {
                        справочника2.ВыбраннаяЗапись = ячейки.Значение as ЗаписьСправочника;
                    }
                    else
                    {
                        справочника2.ВыбраннаяЗапись = null;
                    }
                }
            }
        Label_0262:
            ПроинициализироватьЗначение(выборИзСправочника, style.CellValue);
        }

        public static void ПроинициализироватьЗначение(ВыборИзСправочника выборИзСправочника, object Значение)
        {
            выборИзСправочника.ВыбранныйОбъект = Значение;
        }
    }
}

