using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Collections.Generic;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using Ѕарс.¬ебядро.»нтерфейс;
using Ѕарс.—воды;
using Ѕарс.—воды.ќтчетна€‘орма;
using Ѕарс.—воды.¬ебЅраузерќтчетных‘орм;
using Ѕарс.—воды.”в€зки;

public partial class Forms_ReportForms_PrintForms_PrintForms : ¬еб‘орма
{
    public Forms_ReportForms_PrintForms_PrintForms()
        : base()
    {
        this.«аголовок—траницы = "—писок печатных форм";

        this.Ўиринаќкна = 640;
        this.¬ысотаќкна = 200;

        this.ѕри»нициализации—траницы += new Ѕарс.»нтерфейс.ќбработчик—обыти€(Forms_ReportForms_PrintForms_PrintForms_ѕри»нициализации—траницы);
    }

    void Forms_ReportForms_PrintForms_PrintForms_ѕри»нициализации—траницы(object ќтправитель, Ѕарс.»нтерфейс.јргументы—обыти€ јргументы)
    {

        if (!IsPostBack)
        {
            ќтчетна€‘ормаƒанных отчетна€‘орма = ѕолучитьќтчетную‘орму();

            if (отчетна€‘орма != null)
            {
                this.–едактируемыйќбъект = отчетна€‘орма;
                this.Ўапка—траницы = string.Format("—писок печатных форм (ќтчетна€ форма {0})", отчетна€‘орма.ћетаструктура. од );
            }
        }

        if (–едактируемыйќбъект is ќтчетна€‘ормаƒанных)
        {
            —писокћетаописанийѕечатных‘орм списокѕечатных‘орм = new —писокћетаописанийѕечатных‘орм();

            списокѕечатных‘орм.«агрузить((–едактируемыйќбъект as ќтчетна€‘ормаƒанных).ћетаструктура.»дентификатор);

            if (списокѕечатных‘орм.Count > 0)
            {
                Html“аблица таблица‘орм = new Html“аблица();
                таблица‘орм.Width = "100%";

                foreach (ћетаописаниеѕечатной‘ормы печатна€‘орма in списокѕечатных‘орм)
                {

                    —трокаHtml“аблицы строка = new —трокаHtml“аблицы();
                    —толбецHtml“аблицы столбец = new —толбецHtml“аблицы();
                    столбец.Width = "20px";
                    строка.Cells.Add(столбец);

                    столбец = new —толбецHtml“аблицы();
                    ASP—сылка ссылкаѕечать = new ASP—сылка();
                    ссылкаѕечать.«начение = печатна€‘орма.Ќаименование;
                    ссылкаѕечать.–едактируемыйќбъект = печатна€‘орма;
                    ссылкаѕечать.ѕриЌажатии += new Ѕарс.»нтерфейс.ќбработчик—обыти€(ссылкаѕечать_ѕриЌажатии);

                    столбец.Controls.Add(ссылкаѕечать);
                    строка.Cells.Add(столбец);

                    таблица‘орм.Rows.Add(строка);
                }

                DivPrintForms.Controls.Add(таблица‘орм);
            }
            else
            {
                DivPrintForms.Controls.Add(new LiteralControl("Ќет печатных форм"));
            }
        }
    }

    void ссылкаѕечать_ѕриЌажатии(object ќтправитель, Ѕарс.»нтерфейс.јргументы—обыти€ јргументы)
    {
        if (–едактируемыйќбъект is ќтчетна€‘ормаƒанных)
        {

            ќтчетна€‘ормаƒанных отчетна€‘орма = –едактируемыйќбъект as ќтчетна€‘ормаƒанных;

            ћетаописаниеѕечатной‘ормы печатна€‘орма = (ќтправитель as ASP—сылка).–едактируемыйќбъект as ћетаописаниеѕечатной‘ормы;

            if (печатна€‘орма != null)
            {
                try
                {
                    Ѕарс.ќтчеты.ќтчет отчет = отчетна€‘орма.ѕолучитьќбъектќтчета( печатна€‘орма );

                    Ѕарс.¬ебядро.Ёкспорт‘айла.Ёкспортироватьќтчет( отчет, "Report.xls" );
                }
                catch
                {
                    //throw;
                }
            }

        }
    }

    private ќтчетна€‘ормаƒанных ѕолучитьќтчетную‘орму()
    {
        if (this.ѕараметры√лавногоќкна.ѕараметр«адан("SessionParam"))
        {
            string[] strings = ѕараметры√лавногоќкна["SessionParam"].Split(':');

            if (strings.Length == 2)
            {
                ќтчетна€‘ормаƒанных отчетна€‘орма = null;

                object ќбъект—ессионнойѕеременной = Ѕарс.¬ебядро.ћенеджер—ессионныхѕеременных.ѕолучитьѕеременную»з—ессии(strings[0], strings[1]);

                if (ќбъект—ессионнойѕеременной is —писок“екущихќтчетных‘орм)
                {
                    try
                    {

                        if (this.ѕараметры√лавногоќкна.ѕараметр«адан("Index"))
                        {
                            int »ндексќбъекта¬—писке = -1;

                            if (int.TryParse(ѕараметры√лавногоќкна["Index"].ToString(), out »ндексќбъекта¬—писке))
                            {
                                “екуща€ќтчетна€‘орма текуща€‘орма = (ќбъект—ессионнойѕеременной as —писок“екущихќтчетных‘орм)[»ндексќбъекта¬—писке];

                                if (текуща€‘орма != null)
                                {
                                    »дентификаторћетаописани€‘ормы идентификатор = текуща€‘орма.ѕолучить»дентификаторћетаописани€‘ормы();

                                    ’ранилищећетаописаний.ќбновитьЋокальноећетаописание(идентификатор);

                                    отчетна€‘орма = new ќтчетна€‘ормаƒанных();
                                    отчетна€‘орма.«агрузитьћетаструктуру(идентификатор);

                                    отчетна€‘орма. омпонентќтчетногоѕериода = текуща€‘орма. омпонентќтчетногоѕериода;
                                    отчетна€‘орма.”чреждение = текуща€‘орма.”чреждение;
                                    отчетна€‘орма.Ёлемент÷епочки = текуща€‘орма.Ёлемент÷епочки.“ипЁлемента÷епочки;

                                    ’ранилищеƒанных‘орм.ќбновитьЋокальныеƒанные(отчетна€‘орма.ƒанные.»дентификатор);
                                    
                                    отчетна€‘орма.«агрузитьƒанные();
                                }
                            }
                        }
                    }
                    catch
                    {
                    }
                }
                else if (ќбъект—ессионнойѕеременной is ќтчетна€‘ормаƒанных)
                {
                    отчетна€‘орма = (ќтчетна€‘ормаƒанных)ќбъект—ессионнойѕеременной;
                }
                
                return отчетна€‘орма;
            }
            else
            {
                return null;
            }
        }
        else
        {
            return null;
        }
    }

    protected void  нопка_ќтмена_Click(object sender, EventArgs e)
    {
        this.«акрытьќкно();
    }
}
