using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Collections.Generic;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

using Ѕарс.¬ебядро;
using Ѕарс.¬ебядро.»нтерфейс;
using Ѕарс.—воды.ќтчетна€‘орма;
using Ѕарс.—воды;
using Ѕарс;
using Ѕарс.ядро;
using Ѕарс.–асчеты;

public partial class Racheti_Edit : ¬еб‘орма
{
    public Racheti_Edit()
        : base()
    {
        this.«аголовок—траницы = "¬ыполнение расчета";
        this.Ўиринаќкна = 550;
        this.¬ысотаќкна = 550;

        this.ѕри«агрузке—траницы += new Ѕарс.»нтерфейс.ќбработчик—обыти€(Racheti_Edit_ѕри«агрузке—траницы);
    }

    public –асчет ѕолучитьќбъект–асчет()
    {
        –асчет расчет = (–асчет)ћенеджер—ессионныхѕеременных.ѕолучитьѕеременную»з—ессии(this.»дентификатор, "–асчет");

        if (расчет == null)
        {
            расчет = new –асчет();

            ћенеджер—ессионныхѕеременных.—охранитьѕеременную¬—ессии(this.»дентификатор, "–асчет", расчет);
        }

        return расчет;
    }

    public void «аполнитьќбъект–асчет( –асчет расчет )
    {
        ћенеджер—ессионныхѕеременных.—охранитьѕеременную¬—ессии(this.»дентификатор, "–асчет", расчет);
    }

    void Racheti_Edit_ѕри«агрузке—траницы(object ќтправитель, Ѕарс.»нтерфейс.јргументы—обыти€ јргументы)
    {
        if (!IsPostBack)
        {
            string код–асчета = this.ѕараметры√лавногоќкна["Params"];

            if( !string.IsNullOrEmpty( код–асчета ) )
            {
                ¬ыборка<ќписание–асчета> выборка = new ¬ыборка<ќписание–асчета>(false);
                выборка.«апрос¬ыборки.ƒобавить”словиеќтбора(" од", код–асчета);
                выборка.«агрузить();

                if (выборка. оличество«аписей != 0)
                {
                    –асчет расчет = new –асчет();
                    расчет.”казатьќписание(выборка[0]);

                    «аполнитьќбъект–асчет( расчет );
                }
            }

            // Ћоклизаци€ таблицы
            “аблица_–езультат.SettingsText.CommandCancel = "ќтмена";
            “аблица_–езультат.SettingsText.CommandClearFilter = "ќчистить фильтр";
            “аблица_–езультат.SettingsText.CommandDelete = "”далить";
            “аблица_–езультат.SettingsText.CommandEdit = "»зменить";
            “аблица_–езультат.SettingsText.CommandNew = "ƒобавить";
            “аблица_–езультат.SettingsText.GroupPanel = "ќбласть дл€ группировки столбцов";
            “аблица_–езультат.SettingsText.HeaderFilterShowAll = "(¬се)";
            “аблица_–езультат.SettingsText.GroupContinuedOnNextPage = "√руппа продолжаетс€ на следующей странице";
            “аблица_–езультат.SettingsText.ConfirmDelete = "¬ы уверены, что хотите удалить запись?";
            “аблица_–езультат.SettingsText.CommandUpdate = "—охранить";
            “аблица_–езультат.SettingsText.EmptyDataRow = "Ќет данных";
            “аблица_–езультат.SettingsText.CustomizationWindowCaption = "¬ыбор столбцов";
            “аблица_–езультат.SettingsLoadingPanel.Text = "¬ыполнение расчета...";
            “аблица_–езультат.SettingsPager.Summary.Text = "—траница {0} из {1} ({2} записей)";

            —писокќтчетныхѕериодов списокѕериодов = new —писокќтчетныхѕериодов();
            списокѕериодов.«агрузить();

            combobox_ќтчетныйѕериод.DataSource = списокѕериодов;
            combobox_ќтчетныйѕериод.DataBind();
        }
    }

    private List<»змененныйЁлемент> ѕолучить—писок»зменений(–асчет расчет)
    {
        List< эшированныеƒанные‘ормы> список‘орм = расчет.»змененные‘ормы();

        List<»змененныйЁлемент> —писок»зменений = new List<»змененныйЁлемент>();

        foreach ( эшированныеƒанные‘ормы форма in список‘орм)
        {
            »змененныйЁлемент элемент = new »змененныйЁлемент();
            элемент.“ипЁлемента = “ип»змененногоЁлемента.‘орма;
            элемент.‘орма = форма;
            элемент.»м€ = "‘орма";
            —писок»зменений.Add(элемент);
        }

        foreach (ќписательѕеременной–асчета перем in расчет.ѕеременные–асчета)
        {
            if (расчет.ѕеременные.ContainsKey(перем.»м€))
            {
                »змененныйЁлемент элемент = new »змененныйЁлемент();
                элемент.“ипЁлемента = “ип»змененногоЁлемента.ѕеременна€;
                элемент.»м€ = перем.»м€;
                элемент.ѕеременна€ = расчет.ѕеременные[перем.»м€];
                —писок»зменений.Add(элемент);
            }
        }

        ћенеджер—ессионныхѕеременных.—охранитьѕеременную¬—ессии(this.»дентификатор, "»зменени€", —писок»зменений);

        return —писок»зменений;
    }

    protected void combobox_компонент_Callback(object source, DevExpress.Web.ASPxClasses.CallbackEventArgsBase e)
    {
        if (e.Parameter == "Update")
        {
            ¬ыборка< омпонентќтчетногоѕериода> компоненты = new ¬ыборка< омпонентќтчетногоѕериода>();
            компоненты.«апрос.ƒобавитьѕараметр«апроса((new System.ComponentModel.GuidConverter()) .ConvertFromString(combobox_ќтчетныйѕериод.SelectedItem.Value.ToString()));
            компоненты.«апрос.ƒополнительное”словиеќтбора = "T0.otchetnyiperiod_id = :p";
            компоненты.«агрузить();

            combobox_компонент.DataSource = компоненты;
            combobox_компонент.DataBind();
            combobox_компонент.SelectedIndex = -1;
        }
    }

    protected void “аблица_–езультат_CustomUnboundColumnData(object sender, DevExpress.Web.ASPxGridView.ASPxGridViewColumnDataEventArgs e)
    {
        if (e.IsGetData)
        {
            List<»змененныйЁлемент> —писок»зменений = (List<»змененныйЁлемент>)ћенеджер—ессионныхѕеременных.ѕолучитьѕеременную»з—ессии(this.»дентификатор, "»зменени€");

            »змененныйЁлемент элемент = —писок»зменений[e.ListSourceRowIndex];
            
            switch (элемент.“ипЁлемента)
            {
                case “ип»змененногоЁлемента.‘орма:
                     эшированныеƒанные‘ормы форма = элемент.‘орма;
                    if (форма != null && форма.‘орма != null)
                    {
                        if (e.Column.FieldName == "столбец_”чреждение")
                            e.Value = форма.‘орма.»дентификатор.”чреждение;
                        else
                            if (e.Column.FieldName == "столбец_‘орма")
                                e.Value = форма.‘орма.ћетаструктура‘ормы.Ќаименование;
                            else
                                if (e.Column.FieldName == "столбец_ омпонент")
                                    e.Value = форма.‘орма.»дентификатор. омпонентќтчетногоѕериода.Ќаименование;
                    }
                    break;

                case “ип»змененногоЁлемента.ѕеременна€:
                    if (e.Column.FieldName == "столбец_ѕеременна€")
                        e.Value = элемент.»м€;

                    break;
            }
        }
    }

    protected void “аблица_–езультат_CustomCallback(object sender, DevExpress.Web.ASPxGridView.ASPxGridViewCustomCallbackEventArgs e)
    {
        –асчет расчет = ѕолучитьќбъект–асчет();

        switch( e.Parameters )
        {
            case "Calc" :
                
                try
                {
                    расчет.ќчистить();
                    расчет.ѕодготовить ¬ычислению();

                     омпонентќтчетногоѕериода текущий омпонент = null;

                    ¬ыборка< омпонентќтчетногоѕериода> компоненты = new ¬ыборка< омпонентќтчетногоѕериода>();
                    компоненты.«апрос.ƒобавить”словиеќтбора("»дентификатор", (new System.ComponentModel.GuidConverter()).ConvertFromString(combobox_компонент.SelectedItem.Value.ToString()));
                    компоненты.«агрузить();

                    if (компоненты. оличество«аписей != 0)
                    {
                        текущий омпонент = компоненты[0];
                    }

                    ѕараметры¬ыполнени€–асчета параметры–асчета = new ѕараметры¬ыполнени€–асчета();

                    параметры–асчета. омпонент = текущий омпонент;
                    параметры–асчета.ѕериод = текущий омпонент.ќтчетныйѕериод;

                    расчет.¬ыполнить(параметры–асчета);

                    List<»змененныйЁлемент> —писок»зменений = ѕолучить—писок»зменений(расчет);

                    “аблица_–езультат.DataSource = —писок»зменений;
                    “аблица_–езультат.DataBind();

                }
                catch( Exception exc )
                {
                    Ѕарс.¬ебядро.»нтерфейс.—ообщение. омандаѕоказать»сключение("ќшибка выполнени€ расчет", exc);
                }

                break;

            case "Save" :

                try
                {
                    расчет.—охранить–езультаты();

                    List<»змененныйЁлемент> —писок»змененийѕо—охранению = ѕолучить—писок»зменений(расчет);

                    “аблица_–езультат.DataSource = —писок»змененийѕо—охранению;
                    “аблица_–езультат.DataBind();

                    List<string> ошибки = расчет.ѕолучитьќшибки—охранени€();

                    if (ошибки.Count > 0)
                    {
                        string текстќшибки = "ќшибка сохранени€ форм:\n";

                        foreach (string строкаќшибка in ошибки)
                        {
                            текстќшибки += строкаќшибка + "\n";
                        }

                        Ѕарс.¬ебядро.»нтерфейс.—ообщение. омандаѕоказать—ообщение(текстќшибки);
                    }
                }
                catch
                {
                }

                break;
        }
    }
}