using System;
using System.Data;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using Барс.ВебЯдро.РаботающиеПользователи;
using Барс.Своды.ОтчетнаяФорма;

/// <summary>
/// Summary description for ПользователиСистемы
/// </summary>
public static class ЛогированиеОперацийПользователя
{
    public static ОписаниеРаботающегоПользователя ПолучитьРаботающегоПользователя()
    {
        if (System.Web.HttpContext.Current == null)
        {
            return null;
        }

        Барс.ВебЯдро.РаботающиеПользователи.СписокРаботающихПользователей списокРаботающихПользователей = System.Web.HttpContext.Current.Application["РаботающиеПользователи"] as Барс.ВебЯдро.РаботающиеПользователи.СписокРаботающихПользователей;

        Барс.ВебЯдро.РаботающиеПользователи.ОписаниеРаботающегоПользователя описаниеПользователя = списокРаботающихПользователей.ПолучитьПользователя(System.Web.HttpContext.Current.Session.SessionID);

        return описаниеПользователя;
    }

    public static void ЗафиксироватьОткрытиеФормы(ИдентификаторДанныхФормы ИдентификаторДанных, bool НаРедактирование)
    {
        if (НаРедактирование)
        {
            ЗафиксироватьОперациюСФормой(ИдентификаторДанных, "Открытие формы на редактирование");
        }
        else
        {
            ЗафиксироватьОперациюСФормой(ИдентификаторДанных, "Открытие формы на чтение");
        }
    }

    public static void ЗафиксироватьСохранениеФормы(ИдентификаторДанныхФормы ИдентификаторДанных)
    {
        ЗафиксироватьОперациюСФормой(ИдентификаторДанных, "Сохранение формы");
    }

    public static void ЗафиксироватьЗакрытиеФормы(ИдентификаторДанныхФормы ИдентификаторДанных)
    {
        ЗафиксироватьОперациюСФормой(ИдентификаторДанных, "Снятие блокировки");
    }

    private static void ЗафиксироватьОперациюСФормой(ИдентификаторДанныхФормы ИдентификаторДанных, string Операция)
    {
        if (System.Web.HttpContext.Current == null)
        {
            return;
        }

        ОписаниеРаботающегоПользователя описаниеПользователя = ПолучитьРаботающегоПользователя();

        HttpApplicationState Application = System.Web.HttpContext.Current.Application;

        if (Application["СистемноеЛогирование_РаботаСФормой"] != null
                    && Application["СистемноеЛогирование_РаботаСФормой"] is Барс.СистемноеЛогирование)
        {
            Барс.СистемноеЛогирование логированиеРаботыСФормой = Application["СистемноеЛогирование_РаботаСФормой"] as Барс.СистемноеЛогирование;

            логированиеРаботыСФормой.ДобавитьСообщение(
                    string.Format("{0};{1}@{2};{3};{4};{5};{6}",
                        Операция,
                        описаниеПользователя.ИмяПользователя, 
                        описаниеПользователя.Хост,
                        ИдентификаторДанных.ИдентификаторМетаописанияФормы,
                        ИдентификаторДанных.КомпонентОтчетногоПериода.ОтчетныйПериод.Код,
                        ИдентификаторДанных.КомпонентОтчетногоПериода.Код,
                        ИдентификаторДанных.ЭлементЦепочки,
                        ИдентификаторДанных.Учреждение));
        }
    }
}
